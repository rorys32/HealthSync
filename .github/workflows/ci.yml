name: HealthSync CI
on:
  push:
    branches:
      - health-sync-1.3
  pull_request:
    branches:
      - health-sync-1.3

jobs:
  build-and-test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          npm install
          npm install dotenv jsonwebtoken cors

      - name: Set and log package version
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "Running CI for HealthSync Build $PACKAGE_VERSION"
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV

      - name: Create data.json with perms
        run: |
          touch data.json
          chmod 666 data.json

      - name: Set up .env
        run: |
          echo "PORT=3000" > .env
          echo "DATA_PATH=$(pwd)/data.json" >> .env
          echo "JWT_SECRET=your-secret-key" >> .env

      - name: Start server
        run: |
          npm start &  # Start server in background
          sleep 10     # More time to ensure startup
          curl -f http://localhost:3000 || (echo "Server failed to start" && exit 1)

      - name: Test /api/login and capture token
        id: login
        run: |
          TOKEN=$(curl -s -X POST http://localhost:3000/api/login -H "Content-Type: application/json" -d '{"username":"testuser","password":"testpass"}' | jq -r '.token')
          if [ -z "$TOKEN" ] || [ "$TOKEN" = "null" ]; then
            echo "Login failed: $(curl -s -X POST http://localhost:3000/api/login -H 'Content-Type: application/json' -d '{\"username\":\"testuser\",\"password\":\"testpass\"}')"
            exit 1
          fi
          echo "TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Test /api/data POST
        run: |
          curl -X POST http://localhost:3000/api/data -H "Content-Type: application/json" -H "Authorization: Bearer $TOKEN" -d '{"test":"data"}' -f || exit 1

      - name: Test /api/data GET
        run: |
          curl -X GET http://localhost:3000/api/data -H "Authorization: Bearer $TOKEN" -f || exit 1